generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model booking {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  student_id String?  @db.Uuid
  lesson_id  String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  lesson     lesson?  @relation(fields: [lesson_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?    @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model client {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model content {
  id                 String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title              String   @db.VarChar(255)
  description        String
  category           String   @db.VarChar(255)
  content_creator_id String?  @db.Uuid
  created_at         DateTime @default(now()) @db.Timestamp(6)
  updated_at         DateTime @default(now()) @db.Timestamp(6)
  user               user?    @relation(fields: [content_creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model lesson {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title      String    @db.VarChar(255)
  content    String
  teacher_id String?   @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  booking    booking[]
  user       user?     @relation(fields: [teacher_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  booking     booking[]
  client      client[]
  content     content[]
  lesson      lesson[]
}
